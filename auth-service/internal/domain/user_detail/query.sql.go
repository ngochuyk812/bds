// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package user_detail

import (
	"context"
	"database/sql"
)

const createUserDetail = `-- name: CreateUserDetail :exec
INSERT INTO user_details (
    user_guid, 
    first_name, 
    last_name, 
    phone, 
    avatar, 
    address, 
    createdAt
) VALUES (?, ?, ?, ?, ?, ?, ?)
`

type CreateUserDetailParams struct {
	UserGuid  string
	FirstName sql.NullString
	LastName  sql.NullString
	Phone     sql.NullString
	Avatar    sql.NullString
	Address   sql.NullString
	Createdat int64
}

func (q *Queries) CreateUserDetail(ctx context.Context, arg CreateUserDetailParams) error {
	_, err := q.db.ExecContext(ctx, createUserDetail,
		arg.UserGuid,
		arg.FirstName,
		arg.LastName,
		arg.Phone,
		arg.Avatar,
		arg.Address,
		arg.Createdat,
	)
	return err
}

const deleteUserDetailByUserGuid = `-- name: DeleteUserDetailByUserGuid :exec
UPDATE user_details 
SET deletedAt = ? 
WHERE user_guid = ?
`

type DeleteUserDetailByUserGuidParams struct {
	Deletedat sql.NullInt64
	UserGuid  string
}

func (q *Queries) DeleteUserDetailByUserGuid(ctx context.Context, arg DeleteUserDetailByUserGuidParams) error {
	_, err := q.db.ExecContext(ctx, deleteUserDetailByUserGuid, arg.Deletedat, arg.UserGuid)
	return err
}

const getUserDetailByUserGuid = `-- name: GetUserDetailByUserGuid :one
SELECT id, user_guid, first_name, last_name, phone, avatar, address, createdat, updatedat, deletedat FROM user_details 
WHERE deletedAt IS NULL AND user_guid = ?
`

func (q *Queries) GetUserDetailByUserGuid(ctx context.Context, userGuid string) (UserDetail, error) {
	row := q.db.QueryRowContext(ctx, getUserDetailByUserGuid, userGuid)
	var i UserDetail
	err := row.Scan(
		&i.ID,
		&i.UserGuid,
		&i.FirstName,
		&i.LastName,
		&i.Phone,
		&i.Avatar,
		&i.Address,
		&i.Createdat,
		&i.Updatedat,
		&i.Deletedat,
	)
	return i, err
}

const updateUserDetailByUserGuid = `-- name: UpdateUserDetailByUserGuid :exec
UPDATE user_details 
SET 
    first_name = COALESCE(?, first_name),
    last_name = COALESCE(?, last_name),
    phone = COALESCE(?, phone),
    avatar = COALESCE(?, avatar),
    address = COALESCE(?, address),
    updatedAt = ?
WHERE user_guid = ?
`

type UpdateUserDetailByUserGuidParams struct {
	FirstName sql.NullString
	LastName  sql.NullString
	Phone     sql.NullString
	Avatar    sql.NullString
	Address   sql.NullString
	UpdatedAt sql.NullInt64
	UserGuid  string
}

func (q *Queries) UpdateUserDetailByUserGuid(ctx context.Context, arg UpdateUserDetailByUserGuidParams) error {
	_, err := q.db.ExecContext(ctx, updateUserDetailByUserGuid,
		arg.FirstName,
		arg.LastName,
		arg.Phone,
		arg.Avatar,
		arg.Address,
		arg.UpdatedAt,
		arg.UserGuid,
	)
	return err
}
