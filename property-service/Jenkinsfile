@Library('devops@develop')_


pipeline {
    agent none
    environment{
        DOCKER_NAME_IMAGE = "bds/auth-service"
    }
    stages {
        stage('Set Environment') {
            agent any
            steps {
                script {
                    def branchName = env.GIT_BRANCH.replaceFirst(/^origin\//, '')
                    env.ENV_DEPLOY = (branchName == 'master') ? 'prod' : 'dev'
                    env.DOCKER_IMAGE = "ngochuyk8/${ENV_DEPLOY}-${DOCKER_NAME_IMAGE}:${BUILD_ID}"
                }
            }
        }
        stage("Build") {
            agent any

            steps {
                buildDocker("${env.DOCKER_IMAGE}")
                // script {
                //     echo "Docker Tag: ${env.DOCKER_IMAGE}"
                // }
                // sh "docker build -t ${env.DOCKER_IMAGE} ."
                // withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                //     sh 'echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin'
                //     sh "docker push ${env.DOCKER_IMAGE}"
                // }
                // sh "docker image rm ${env.DOCKER_IMAGE}"
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        
        stage('Deploy') {
            agent any 
            
            steps {
                script {
                    sh 'cd devops && ls -la'
                    
                    echo "Deleting the K8s...: ngochuyk8/${env.BRANCH_NAME}/${DOCKER_NAME_IMAGE}:${BUILD_ID}"
                    def pipelineK8s = load 'devops/Jenkinsfile'
                    pipelineK8s.run("${DOCKER_NAME_IMAGE}", DOCKER_IMAGE, 'devops', ".net", env.ENV_DEPLOY) 
                   }
            }
        }
    }
}